[{"C:\\Users\\MISHONI\\Desktop\\Marko\\todo-app\\src\\index.js":"1","C:\\Users\\MISHONI\\Desktop\\Marko\\todo-app\\src\\App.js":"2","C:\\Users\\MISHONI\\Desktop\\Marko\\todo-app\\src\\Components\\List.jsx":"3","C:\\Users\\MISHONI\\Desktop\\Marko\\todo-app\\src\\Components\\Form.jsx":"4","C:\\Users\\MISHONI\\Desktop\\Marko\\todo-app\\src\\hooks\\UseLocalStorage.jsx":"5","C:\\Users\\MISHONI\\Desktop\\Marko\\todo-app\\src\\Components\\Item.jsx":"6"},{"size":216,"mtime":1612218020360,"results":"7","hashOfConfig":"8"},{"size":1123,"mtime":1612266553827,"results":"9","hashOfConfig":"8"},{"size":506,"mtime":1612218020359,"results":"10","hashOfConfig":"8"},{"size":2384,"mtime":1612266553828,"results":"11","hashOfConfig":"8"},{"size":1437,"mtime":1612266553830,"results":"12","hashOfConfig":"8"},{"size":1336,"mtime":1612266553829,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"gmg8a4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\MISHONI\\Desktop\\Marko\\todo-app\\src\\index.js",[],["29","30"],"C:\\Users\\MISHONI\\Desktop\\Marko\\todo-app\\src\\App.js",["31","32"],"C:\\Users\\MISHONI\\Desktop\\Marko\\todo-app\\src\\Components\\List.jsx",[],"C:\\Users\\MISHONI\\Desktop\\Marko\\todo-app\\src\\Components\\Form.jsx",["33","34"],"import React, { Component, useEffect } from 'react';\r\n// instaliran dodatan paket za generisanje id-jeva, i preko f-je nextId() generisemo novi id\r\nimport nextId from \"react-id-generator\";\r\n\r\nconst Form = ({ filter, setFilter, setFilteredItems, input, todos, setTodos, setInput }) => {\r\n\r\n\r\n    useEffect(() => {\r\n        handleFilter();\r\n    }, [filter, todos])\r\n\r\n    const inputHandler = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handleNewTodo = (e) => {\r\n        e.preventDefault();\r\n        setInput(input);\r\n        input !== \"\"\r\n            ? setTodos([...todos, { todoInfo: input, done: false, id: nextId(), importance: \"standard\" }])\r\n            : alert(\"Ne može se napraviti todo od praznog unosa\");\r\n        // sad praznimo polje za unos\r\n        setInput(\"\");\r\n    }\r\n\r\n    const handleFilter = (ev) => {\r\n        switch (filter) {\r\n            case \"done\":\r\n                setFilteredItems(todos.filter(el => el.done));\r\n                break;\r\n            case \"undone\":\r\n                setFilteredItems(todos.filter(el => !el.done));\r\n                break;\r\n            default:\r\n                setFilteredItems(todos);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleChangeFilter = (ev) => {\r\n        setFilter(ev.target.value);\r\n    }\r\n    const enterPressed = (ev) => {\r\n        let code = ev.keyCode || ev.which;\r\n        if (code === 13) handleNewTodo();\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            {/* dodavanjem value={input} mi obezbedjujemo da kad god se stanje inputa promeni\r\n            nakon ponovnog renderovanja value bude jednako inputu koji smo setovali na \"\" */}\r\n            <input value={input} onChange={inputHandler} type=\"text\" className=\"todo-input\" />\r\n            <button onKeyPress={enterPressed} onClick={handleNewTodo} className=\"todo-button\" type=\"submit\">\r\n                {/* ovo menjamo kasnije */}\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={handleChangeFilter} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">Svi</option>\r\n                    <option value=\"done\">Završeni</option>\r\n                    <option value=\"undone\">Nezavršeni</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","C:\\Users\\MISHONI\\Desktop\\Marko\\todo-app\\src\\hooks\\UseLocalStorage.jsx",[],"C:\\Users\\MISHONI\\Desktop\\Marko\\todo-app\\src\\Components\\Item.jsx",["35","36"],"// import React, { Component } from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Item = ({ info, todo, todos, setTodos }) => {\r\n\r\n    const handleDelete = () => {\r\n        setTodos(todos.filter((elem) => elem.id !== todo.id))\r\n    }\r\n\r\n    const handleToggleStatus = () => {\r\n        // ovde treba da odradimo dodavanje i uklanjanje klase\r\n        // ta klasa treba recimo da precrta, promeni boju, onemoguci editovanje\r\n        setTodos(todos.map(el => {\r\n            if (el.id === todo.id) {\r\n                return {\r\n                    // ovo je destrukturisanje objekta prvo, i onda menjamo jedan property\r\n                    ...el, done: !el.done\r\n                    // trebalo bi kad se promeni ovaj atribut na osnovu toga da povlaci odgovarajucu klasu iz css\r\n                }\r\n            }\r\n            return el;\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"item\">\r\n            \r\n            <div>\r\n                <button onClick={handleToggleStatus} className=\"btn-check\"><i className=\"fas fa-check\"></i></button>\r\n                <button onClick={handleDelete} className=\"btn-delete\"><i className=\"fas fa-trash-alt\"></i></button>\r\n            </div>\r\n\r\n            <span className={`${todo.done ? \"done\" : \"\"}`}>{info}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Item;",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},{"ruleId":"41","severity":1,"message":"45","line":1,"column":38,"nodeType":"43","messageId":"44","endLine":1,"endColumn":47},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},{"ruleId":"46","severity":1,"message":"47","line":9,"column":8,"nodeType":"48","endLine":9,"endColumn":23,"suggestions":"49"},{"ruleId":"41","severity":1,"message":"50","line":2,"column":17,"nodeType":"43","messageId":"44","endLine":2,"endColumn":25},{"ruleId":"41","severity":1,"message":"45","line":2,"column":27,"nodeType":"43","messageId":"44","endLine":2,"endColumn":36},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleFilter'. Either include it or remove the dependency array.","ArrayExpression",["53"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [filter, handleFilter, todos]",{"range":"56","text":"57"},[344,359],"[filter, handleFilter, todos]"]